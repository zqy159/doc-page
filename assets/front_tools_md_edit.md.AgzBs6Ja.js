import{_ as s,c as n,o as e,ai as i}from"./chunks/framework.DTqeMNVv.js";const u=JSON.parse('{"title":"markdown 操作","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"front/tools/md_edit.md","filePath":"front/tools/md_edit.md"}'),p={name:"front/tools/md_edit.md"};function l(t,a,o,d,r,c){return e(),n("div",null,a[0]||(a[0]=[i(`<h1 id="markdown-操作" tabindex="-1">markdown 操作 <a class="header-anchor" href="#markdown-操作" aria-label="Permalink to &quot;markdown 操作&quot;">​</a></h1><h2 id="基础语法" tabindex="-1">基础语法 <a class="header-anchor" href="#基础语法" aria-label="Permalink to &quot;基础语法&quot;">​</a></h2><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 第一项</span></span>
<span class="line"><span>2. 第二项</span></span>
<span class="line"><span>3. 第三项</span></span></code></pre></div><p>渲染效果:</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h2 id="vitepress-中导航分层" tabindex="-1">vitepress 中导航分层 <a class="header-anchor" href="#vitepress-中导航分层" aria-label="Permalink to &quot;vitepress 中导航分层&quot;">​</a></h2><p>文档头部添加</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>---</span></span>
<span class="line"><span>outline: deep</span></span>
<span class="line"><span>---</span></span></code></pre></div><h2 id="关键特性" tabindex="-1">关键特性 <a class="header-anchor" href="#关键特性" aria-label="Permalink to &quot;关键特性&quot;">​</a></h2><h3 id="_1-自动排序" tabindex="-1">1. 自动排序 <a class="header-anchor" href="#_1-自动排序" aria-label="Permalink to &quot;1. 自动排序&quot;">​</a></h3><p>Markdown 会自动纠正数字顺序，即使你手动输入不连续的数字（如 1. 3. 5.），最终也会渲染为 1. 2. 3.。 但建议保持数字正确，避免代码可读性下降。</p><h3 id="_2-嵌套列表" tabindex="-1">2. 嵌套列表 <a class="header-anchor" href="#_2-嵌套列表" aria-label="Permalink to &quot;2. 嵌套列表&quot;">​</a></h3><p>通过缩进实现多级列表（支持有序+无序混合）：</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 第一项</span></span>
<span class="line"><span>   - 子项1（无序）</span></span>
<span class="line"><span>   - 子项2</span></span>
<span class="line"><span>3. 第二项</span></span>
<span class="line"><span>   1. 子项1（有序）</span></span>
<span class="line"><span>   3. 子项2</span></span></code></pre></div><p>渲染效果:</p><ol><li>第一项 <ul><li>子项 1（无序）</li><li>子项 2</li></ul></li><li>第二项 <ol><li>子项 1（有序）</li><li>子项 2</li></ol></li></ol><h3 id="_3-段落与换行" tabindex="-1">3. 段落与换行 <a class="header-anchor" href="#_3-段落与换行" aria-label="Permalink to &quot;3. 段落与换行&quot;">​</a></h3><ul><li>列表项内换行：在行末加 （两个空格）或空行。</li><li>插入非列表内容（如代码块）：需空行分隔。</li></ul><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 第一项</span></span>
<span class="line"><span>   第二行（通过两个空格换行）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2. 第二项</span></span>
<span class="line"><span>   \`\`\`javascript</span></span>
<span class="line"><span>   console.log(&quot;代码块需空行分隔&quot;);</span></span></code></pre></div><p>渲染结果：</p><ol><li><p>第一项<br> 第二行（通过两个空格换行）</p></li><li><p>第二项</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;代码块需空行分隔&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li></ol><h3 id="_4-文字样式" tabindex="-1">4. 文字样式 <a class="header-anchor" href="#_4-文字样式" aria-label="Permalink to &quot;4. 文字样式&quot;">​</a></h3><ul><li>用 双星号 或 双下划线 包裹文字，渲染后文字会加粗</li><li>用 <em>单星号</em> 或 <em>单下划线</em> 包裹文字，渲染后文字会倾斜</li><li>用 <strong><em>三星号</em></strong> 或 <strong><em>三下划线</em></strong> 包裹文字，同时加粗和倾斜</li></ul><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>**这是加粗文字**，但并非标题。</span></span>
<span class="line"><span>__这也是加粗文字__，保持段落格式。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>*这是斜体文字*，适合轻度强调。</span></span>
<span class="line"><span>_这也是斜体文字_，保持段落连贯性。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***这是重点强调内容***，适合高亮关键信息。</span></span></code></pre></div><p>渲染结果:<br><strong>这是加粗文字</strong>，但并非标题。 <strong>这也是加粗文字</strong>，保持段落格式。<br><em>这是斜体文字</em>，适合轻度强调。<br><em>这也是斜体文字</em>，保持段落连贯性。<br><strong><em>这是重点强调内容</em></strong>，适合高亮关键信息。</p><h3 id="_5-内联-html-标签-进阶" tabindex="-1">5. 内联 HTML 标签（进阶） <a class="header-anchor" href="#_5-内联-html-标签-进阶" aria-label="Permalink to &quot;5. 内联 HTML 标签（进阶）&quot;">​</a></h3><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;strong&gt;这是语义化加粗&lt;/strong&gt;，适合需要明确强调的场景。</span></span>
<span class="line"><span>&lt;em&gt;这是语义化斜体&lt;/em&gt;，常用于专业术语或引用。</span></span></code></pre></div><h3 id="_6-标签化以及链接" tabindex="-1">6. 标签化以及链接 <a class="header-anchor" href="#_6-标签化以及链接" aria-label="Permalink to &quot;6. 标签化以及链接&quot;">​</a></h3><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[minisearch](https://github.com/lucaong/minisearch/)</span></span>
<span class="line"><span>\`高亮标签\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>![搜索弹窗截图](https://vitejs.cn/vitepress/vitepress-logo-large.webp)</span></span></code></pre></div><p>渲染效果:</p><ul><li>链接 <a href="https://github.com/lucaong/minisearch/" target="_blank" rel="noreferrer">minisearch</a></li><li>标签 <code>高亮标签</code></li><li>图片</li></ul><p><img src="https://vitejs.cn/vitepress/vitepress-logo-large.webp" alt="搜索弹窗截图"></p><h3 id="_7-表格" tabindex="-1">7. 表格 <a class="header-anchor" href="#_7-表格" aria-label="Permalink to &quot;7. 表格&quot;">​</a></h3><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>| header1 | header2 |</span></span>
<span class="line"><span>| ------- | ------- |</span></span>
<span class="line"><span>|   1  12222222222222222222   |       2223123123123111111111111111111  |</span></span>
<span class="line"><span>|   1  12222222222222222222   |       2223123123123111111111111111111  |</span></span>
<span class="line"><span>|   1  12222222222222222222   |       2223123123123111111111111111111  |</span></span>
<span class="line"><span>|   1  12222222222222222222   |       2223123123123111111111111111111  |</span></span></code></pre></div><p>渲染效果</p><table tabindex="0"><thead><tr><th>header1</th><th>header2</th></tr></thead><tbody><tr><td>1 12222222222222222222</td><td>2223123123123111111111111111111</td></tr><tr><td>1 12222222222222222222</td><td>2223123123123111111111111111111</td></tr><tr><td>1 12222222222222222222</td><td>2223123123123111111111111111111</td></tr><tr><td>1 12222222222222222222</td><td>2223123123123111111111111111111</td></tr></tbody></table>`,36)]))}const g=s(p,[["render",l]]);export{u as __pageData,g as default};
